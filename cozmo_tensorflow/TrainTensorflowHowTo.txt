#Install etc
#reset the tensorflow git
#LabelImages with labelImg
#convert xmls in csv with xml_to_csv.py
#convert csv to fsRekord File with generate_tfrecord.py
#download model
#create piplineconfig file
#create yml cloud file
#upload (record files, model* files from the model, pipconfig) to storage

https://pythonprogramming.net/training-custom-objects-tensorflow-object-detection-api-tutorial/?completed=/creating-tfrecord-files-tensorflow-object-detection-api-tutorial/


#Train command (from tensorflow/models/research):
gcloud ml-engine jobs submit training `whoami`_object_detection_`date +%s` \
    --runtime-version 1.6 \
    --job-dir=gs://cozmo/train \
    --packages dist/object_detection-0.1.tar.gz,slim/dist/slim-0.1.tar.gz \
    --module-name object_detection.train \
    --region us-central1 \
    --config object_detection/samples/cloud/cloud.yml \
    -- \
    --train_dir=gs://cozmo/train \
    --pipeline_config_path=gs://cozmo/data/faster_rcnn_resnet101_cozmo.config

	
#Eval Command:
gcloud ml-engine jobs submit training `whoami`_object_detection_eval_`date +%s` \
    --runtime-version 1.6 \
    --job-dir=gs://cozmo/train \
    --packages dist/object_detection-0.1.tar.gz,slim/dist/slim-0.1.tar.gz \
    --module-name object_detection.eval \
    --region us-central1 \
    --scale-tier BASIC_GPU \
    -- \
    --checkpoint_dir=gs://cozmo/train \
    --eval_dir=gs://cozmo/eval \
    --pipeline_config_path=gs://cozmo/data/faster_rcnn_resnet101_cozmo.config
	
#Monitor Training:
	tensorboard --logdir=gs://cozmo/data port=80